version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - kafka_network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    container_name: kafka
    ports:
      - 29092:29092
    networks:
      - kafka_network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS: 120000


  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - 8086:8086
    networks:
      - kafka_network
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: user
      DOCKER_INFLUXDB_INIT_PASSWORD: password
      DOCKER_INFLUXDB_INIT_ORG: myorg
      DOCKER_INFLUXDB_INIT_BUCKET: infldb
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: mytoken

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    depends_on:
      - influxdb
      - kafka
    ports:
      - 8125:8125/udp
    networks:
      - kafka_network
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro

    environment:
      HOSTNAME: telegraf
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_DB: infldb
      INFLUXDB_USER: user
      INFLUXDB_USER_PASSWORD: password

networks:
  kafka_network:
    name: kafka_docker_net